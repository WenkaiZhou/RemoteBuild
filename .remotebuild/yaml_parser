#!/bin/bash

# Based on https://github.com/Minlison/yaml-parser/blob/master/parser_yaml.sh

function parse_yaml() {
    local yaml_file=$1
    local upper_case=$2
    local s
    local w
    local fs
    local last_indent=0

    s='[[:space:]]*'
    w='[a-zA-Z0-9_.-]*'
    fs="$(echo @|tr @ '\034')"
    (
        sed -ne '/^--/s|--||g; s|\"|\\\"|g; s/\s*$//g;' \
            -e "/#.*[\"\']/!s| #.*||g; /^#/s|#.*||g;" \
            -e  "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
            -e  "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" |

        awk -F"$fs" '{
                indent = length($1)/2;
                if (length($2) == 0) {
                    conj[indent]="+";
                } else {
                    conj[indent]="";
                }
                vname[indent] = $2;
                for (i in vname) {
                    if (i > indent) {
                        delete vname[i];
                    }
                }
                if (length($3) > 0) {
                    last_vname=vname[0];
                    vn="";
                    for (i=0; i<indent; i++) {
                        if (last_vname != "") {
                            vn=(vn)(vname[i])("_");
                            last_vname=vname[i+1];
                        }
                    }
                    name = (vn)$2(conj[indent-1]);
                    value = $3;
                    gsub("-","_",name)
                    if("'"$upper_case"'" == "true") {
                        printf("%s=(\"%s\")\n", toupper(name), value);
                    } else {
                        printf("%s=(\"%s\")\n", name, value);
                    }
                }
            }' |

        sed -e 's/_=/+=/g' \
            -e '/\..*=/s|\.|_|' \
            -e '/\-.*=/s|\-|_|'

    ) < "$yaml_file"

}

eval "$(parse_yaml $*)"